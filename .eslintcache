[{"/home/shwanvas/Documents/Reactjs/todo/src/index.js":"1","/home/shwanvas/Documents/Reactjs/todo/src/App.js":"2","/home/shwanvas/Documents/Reactjs/todo/src/reportWebVitals.js":"3","/home/shwanvas/Documents/Reactjs/todo/src/components/Form.js":"4","/home/shwanvas/Documents/Reactjs/todo/src/components/TodoList.js":"5","/home/shwanvas/Documents/Reactjs/todo/src/components/Todo.js":"6"},{"size":500,"mtime":1609206818586,"results":"7","hashOfConfig":"8"},{"size":1591,"mtime":1609411150120,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1609246086093,"results":"10","hashOfConfig":"8"},{"size":1029,"mtime":1609335915169,"results":"11","hashOfConfig":"8"},{"size":541,"mtime":1609409814189,"results":"12","hashOfConfig":"8"},{"size":917,"mtime":1609409844977,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"12gylk9",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/shwanvas/Documents/Reactjs/todo/src/index.js",[],["28","29"],"/home/shwanvas/Documents/Reactjs/todo/src/App.js",["30"],"import React,{ useState, useEffect } from \"react\";\nimport './App.css';\nimport Form from \"./components/Form\";\nimport TodoList from \"./components/TodoList\";\nfunction App() {\n  \n  const [inputText, setInputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState(\"all\");\n  const [filteredTodos, setFilteredTodos] = useState([]);\n  \n  \n  \n  useEffect(() => { getLocalTodos(); }, []);\n  useEffect(() => {\n    const filterHandler = () => {\n      switch(status){\n        case 'completed':\n          setFilteredTodos(todos.filter(todo => todo.completed === true));\n          break;\n        case 'uncompleted':\n          setFilteredTodos(todos.filter(todo => todo.completed === false));\n          break;\n        default:\n          setFilteredTodos(todos);\n          break;\n      }\n    };\n    filterHandler();\n    saveLocalTodos();\n  }, [todos,status]);\n  \n\n  const saveLocalTodos = () => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos)); };\n  const getLocalTodos = () => {\n    if(localStorage.getItem(\"todos\") === null){\n      localStorage.setItem(\"todos\", JSON.stringify([]));\n    }else{\n      let todoLocal = JSON.parse(localStorage.getItem(\"todos\"));\n      setTodos(todoLocal);\n    }\n  };\n  return (\n    <div className=\"App\">\n     <header><h1>Todo List</h1></header>\n     <Form \n     inputText={inputText} \n     todos={todos} setTodos={setTodos} \n     setInputText={setInputText}\n     setStatus={setStatus}\n     />\n     <TodoList filteredTodos={filteredTodos} setTodos={setTodos} todos={todos}/>\n     \n    </div>\n  );\n}\n\nexport default App;\n","/home/shwanvas/Documents/Reactjs/todo/src/reportWebVitals.js",[],"/home/shwanvas/Documents/Reactjs/todo/src/components/Form.js",[],"/home/shwanvas/Documents/Reactjs/todo/src/components/TodoList.js",[],"/home/shwanvas/Documents/Reactjs/todo/src/components/Todo.js",[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":31,"column":6,"nodeType":"37","endLine":31,"endColumn":20,"suggestions":"38"},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'saveLocalTodos'. Either include it or remove the dependency array.","ArrayExpression",["41"],"no-global-assign","no-unsafe-negation",{"desc":"42","fix":"43"},"Update the dependencies array to be: [todos, status, saveLocalTodos]",{"range":"44","text":"45"},[873,887],"[todos, status, saveLocalTodos]"]